<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zgPWp9RW6m/hJ4UAITSdrmazOv8A/9k=
</value>
  </data>
</root>